"""Unit tests for market."""

from src.slab import SLAB_HEADER_LAYOUT, SLAB_LAYOUT, SLAB_NODE_LAYOUT

HEX_DATA = "0900000000000000020000000000000008000000000000000400000000000000010000001e00000000000040952fe4da5c1f3c860200000004000000030000000d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d7b0000000000000000000000000000000200000002000000000000a0ca17726dae0f1e43010000001111111111111111111111111111111111111111111111111111111111111111410100000000000000000000000000000200000001000000d20a3f4eeee073c3f60fe98e010000000d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d7b000000000000000000000000000000020000000300000000000040952fe4da5c1f3c8602000000131313131313131313131313131313131313131313131313131313131313131340e20100000000000000000000000000010000001f0000000500000000000000000000000000000005000000060000000d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d7b0000000000000000000000000000000200000004000000040000000000000000000000000000001717171717171717171717171717171717171717171717171717171717171717020000000000000000000000000000000100000020000000000000a0ca17726dae0f1e430100000001000000020000000d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d7bnoqa: E501 # pylint: disable=line-too-long
DATA = bytes.fromhex(HEX_DATA)


def test_parse_header():
    """Test parse slab headers."""
    # We only parse the data for the header which is the first 32 bytes.
    header = SLAB_HEADER_LAYOUT.parse(DATA[:32])
    assert header.bump_index == 9
    assert header.free_list_length == 2
    assert header.free_list_head == 8


def test_parse_node():
    """Test the parsing logic for a SLAB node."""
    # We only parse the data for the first node. The header is of length 32 bytes.
    # And the slab node layout requires 72 bytes (4 bytes for tag and 68 bytes for node data).
    slab_node = SLAB_NODE_LAYOUT.parse(DATA[32 : 32 + 72])  # noqa
    assert slab_node.tag == 1
    assert slab_node.node.prefixLen == 30
    assert slab_node.node.children == [4, 3]


def test_parse_slab():
    slab = SLAB_LAYOUT.parse(DATA)
    assert len(slab.nodes) == 9
    assert slab.nodes[1].tag == 2
    assert slab.nodes[1].node.fee_tier == 0
    assert slab.nodes[1].node.quantity == 321
